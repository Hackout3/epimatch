% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tableFromMatch.R
\name{tablesFromMatch}
\alias{tablesFromMatch}
\title{Generate a list of tables aggregating the matched values}
\usage{
tablesFromMatch(dat1, dat2 = NULL, funlist = list(), matchList = NULL,
  collapse = TRUE)
}
\arguments{
\item{dat1}{An input linelist}

\item{dat2}{An optional extra linelist}

\item{funlist}{A list containing lists containing:
\itemize{
 \item d1vars - variable names for dataset 1
 \item d2vars - variable names for dataset 2
 \item fun - function name to process on these variables
 \item extraparams - extra parameters that need to be applied with the function.
 \item weights - a weight vector to scale each matrix (not used in processFunctionList).
}}

\item{matchList}{a list derived from \code{\link{matchEpiData}}. If this is
\code{NULL}, a threshold can be supplied instead to calculate the list on
the fly.}

\item{collapse}{When \code{TRUE}, the list of data frames will be collapsed
into one data frame an extra column specifying the group appended.}
}
\value{
a list of data frames sorted in decreasing order of matching-ness
  with three extra columns:
  \describe{
      \item{source}{ data set of origin}
      \item{index}{ index in data set}
      \item{score}{ the score of the matches to the first item in the group.}
  }
  When \code{collapse = TRUE}, a fourth column, \code{group} is appended.
}
\description{
Generate a list of tables aggregating the matched values
}
\details{
This will collect all of the data from \code{\link{matchEpiData}}
  and present it in table format. It will collapse them into tidy tables and,
  if provided, the score of the matches will be provided.
}
\examples{
## Loading Data

indata <- system.file("files", package = "epimatch")
indata <- dir(indata, full.names = TRUE)
x <- lapply(indata, read.csv, stringsAsFactors = FALSE)
names(x) <- basename(indata)

# We will use one data set from the case information and lab results
case <- x[["CaseInformationForm.csv"]]
lab <- x[["LaboratoryResultsForm7.csv"]]

funlist <- list(
             list(d1vars = "ID",
                  d2vars = "ID",
                  fun = "nameDists",
                  extraparams = NULL,
                  weight = 1),
             list(d1vars = c("Surname", "OtherNames"),
                  d2vars = c("SurnameLab", "OtherNameLab"),
                  fun = "nameDists",
                  extraparams = NULL,
                  weight = 0.5)
           )
# This will get all of the indices that match the ID and Names with a
# threshold of 0.25
res <- matchEpiData(dat1 = case,
                    dat2 = lab,
                    funlist = funlist,
                    thresh = 0.25,
                    giveWeight = TRUE)
tablesFromMatch(case, lab, funlist, matchList = res, collapse = FALSE)
tablesFromMatch(case, lab, funlist, matchList = 0.25)
}

