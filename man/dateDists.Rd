% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchDate.R
\name{dateDists}
\alias{dateDists}
\title{date function for matching}
\usage{
dateDists(dat1, dat2 = NULL, dat1Format = "mdy", dat2Format = "mdy",
  threshold = 0L)
}
\arguments{
\item{dat1, dat2}{a vector of dates to match}

\item{dat1Format, dat2Format}{format of dates to pass to \pkg{lubridate} in
the form of "mdy" or "ymd" etc.}

\item{threshold}{in days, otherwise returns scaled values}
}
\value{
a pairwise matrix of scores from 0 (exact match) to 1 (no match)
}
\description{
date function for matching
}
\details{
The formats for dates are passed to \pkg{lubridate}'s function
  \code{\link{parse_date_time}}, so they need to be in the format "mdy" or
  "ymd", etc.
}
\examples{
library('epimatch')

# Two data sets in Month-Day-Year and Year-Month-Day format, respectively.
# Note that the way the dates can vary within data sets, but it's assumed
# that the order within a data set is consistant.

test1 <- data.frame(x = c("Jan-21-01", "01-25-02"), stringsAsFactors = FALSE)
test2 <- data.frame(x = c("01-JAN-21", "2001-Jan-31"), stringsAsFactors = FALSE)

# match dates within 11 days of each other
dateDists(test1, test2, dat1Format = "mdy", dat2Format = "ymd", threshold = 11)

# exact match of dates
dateDists(test1, test2, dat1Format = "mdy", dat2Format = "ymd")

# relative distance of dates by setting threshold to NULL
dateDists(test1, test2, dat1Format = "mdy", dat2Format = "ymd", threshold = NULL)

}

